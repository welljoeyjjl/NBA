{"version":3,"sources":["assets/nba-logoman-word-white.svg","components/TopBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","React","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerName","playerId","Profile","console","log","props","playerInfo","_this$props$playerInf","teamAbbreviation","teamCity","teamName","height","weight","pts","reb","ast","pie","concat","window","d3_hexbin","hexbin","ShotChart","_this","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","_this$props","minCount","displayToolTips","chartType","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","displayType","call","datum","id","CountSlider","_getPrototypeOf2","_len","length","args","Array","_key","state","inputValue","onChange","cleanValue","Number","parseInt","isNaN","setState","onMinCountChange","row","col","span","slider","min","max","input_number","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","onDisplayToolTipsChange","onChartTypeChange","e","target","_this$state","ShotChart_ShotChart","offset","CountSlider_CountSlider","_","debounce","es_radio","es_switch","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","onSelect","loadPlayerInfo","handleSearch","players","searchPlayers","_ref","fullName","auto_complete","size","onSearch","placeholder","optionLabelProp","input","suffix","icon","type","Main","findPlayer","commonPlayerInfo","playerHeadlineStats","objectSpread","SearchBar_SearchBar","Profile_Profile","DataViewContainer_DataViewContainer","App","TopBar_TopBar","Main_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.848b585e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\r\nimport logo from \"../assets/nba-logoman-word-white.svg\";\r\n\r\nexport class TopBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}","export const PROFILE_PIC_URL_PREFIX = \"https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190\";\r\nexport const TEAM_PIC_URL_PREFIX = \"https://stats.nba.com/media/img/teams/logos\";\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    playerName: 'Stephen Curry',\r\n    playerId: 201939\r\n};","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nexport class Profile extends React.Component {\r\n    render() {\r\n        console.log(this.props.playerInfo);\r\n\r\n        const {\r\n            playerId,\r\n            playerName,\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            height,\r\n            weight,\r\n            pts,\r\n            reb,\r\n            ast,\r\n            pie\r\n        } = this.props.playerInfo;\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"player-name\">\r\n                    { playerName }\r\n                </div>\r\n\r\n                <img\r\n                    className=\"profile-pic\"\r\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                    alt={`${playerName}`}\r\n                />\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Team</div>\r\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n                </div>\r\n\r\n                <img\r\n                    className=\"team-logo\"\r\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                    alt={`${teamCity} ${teamName}`}\r\n                />\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Height</div>\r\n                    <div className=\"profile-entry-right\">{height}</div>\r\n                </div>\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Weight</div>\r\n                    <div className=\"profile-entry-right\">{weight}</div>\r\n                </div>\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PTS</div>\r\n                    <div className=\"profile-entry-right\">{pts}</div>\r\n                </div>\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">REB</div>\r\n                    <div className=\"profile-entry-right\">{reb}</div>\r\n                </div>\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">AST</div>\r\n                    <div className=\"profile-entry-right\">{ast}</div>\r\n                </div>\r\n\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PIE</div>\r\n                    <div className=\"profile-entry-right\">{pie}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number.isRequired,\r\n        minCount: PropTypes.number.isRequired,\r\n        displayToolTips: PropTypes.bool.isRequired,\r\n        chartType: PropTypes.string.isRequired,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        nba.stats.shots({\r\n            PlayerID: this.props.playerId\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n\r\n            const { minCount, displayToolTips, chartType } = this.props;\r\n            const courtSelection = d3.select(\"#shot-chart\");\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500);\r\n            const chart_shots = shots()\r\n                .shotRenderThreshold(minCount)\r\n                .displayToolTips(displayToolTips)\r\n                .displayType(chartType);\r\n            courtSelection.call(chart_court);\r\n            courtSelection.datum(final_shots).call(chart_shots);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Row, Col, Slider, InputNumber\r\n} from 'antd';\r\n\r\nexport class CountSlider extends React.Component {\r\n    state = {\r\n        inputValue: this.props.value\r\n    }\r\n\r\n    onChange = (value) => {\r\n        let cleanValue = Number.parseInt(value, 10);\r\n        cleanValue = isNaN(cleanValue) ? this.state.inputValue: cleanValue;\r\n\r\n        this.setState({\r\n            inputValue: cleanValue\r\n        });\r\n        this.props.onMinCountChange(cleanValue);\r\n    }\r\n\r\n    render() {\r\n        const { inputValue } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Slider\r\n                        min={1}\r\n                        max={20}\r\n                        onChange={this.onChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                    />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={inputValue}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { ShotChart } from './ShotChart';\r\nimport {\r\n    Row, Col, Radio, Switch\r\n} from 'antd';\r\nimport { CountSlider } from './CountSlider';\r\nimport _ from 'lodash';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class DataViewContainer extends React.Component {\r\n    state = {\r\n        minCount: 2,\r\n        displayToolTips: true,\r\n        chartType: \"hexbin\"\r\n    }\r\n\r\n    onMinCountChange = (value) => {\r\n        this.setState({\r\n            minCount: value\r\n        });\r\n    }\r\n\r\n    onDisplayToolTipsChange = (displayToolTips) => {\r\n        this.setState({\r\n            displayToolTips\r\n        });\r\n    }\r\n\r\n    onChartTypeChange = (e) => {\r\n        this.setState({\r\n            chartType: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            minCount,\r\n            displayToolTips,\r\n            chartType\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart\r\n                    playerId={this.props.playerId}\r\n                    minCount={minCount}\r\n                    displayToolTips={displayToolTips}\r\n                    chartType={chartType}\r\n                />\r\n\r\n                {\r\n                    chartType === \"hexbin\" ? (\r\n                        <Row>\r\n                            <Col offset={4}>\r\n                                <CountSlider\r\n                                    value={minCount} onMinCountChange={_.debounce(this.onMinCountChange, 500)} />\r\n                            </Col>\r\n                        </Row>\r\n                    ): null\r\n                }\r\n\r\n                <Row>\r\n                    <Col span={9} offset={6}>\r\n                        <RadioGroup value={chartType} onChange={this.onChartTypeChange} >\r\n                            <Radio value=\"hexbin\">Hexbin</Radio>\r\n                            <Radio value=\"scatter\">Scatter</Radio>\r\n                        </RadioGroup>\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <Switch\r\n                            onChange={this.onDisplayToolTipsChange}\r\n                            checkedChildren=\"On\"\r\n                            unCheckedChildren=\"Off\"\r\n                            defaultChecked\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { AutoComplete, Input, Icon } from 'antd';\r\nimport nba from 'nba';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n    }\r\n\r\n    onSelect = (value) => {\r\n        console.log('onSelect', value);\r\n        this.props.loadPlayerInfo(value);\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        const players = nba.searchPlayers(value);\r\n        console.log(players);\r\n\r\n        this.setState({\r\n            dataSource: players.map(({playerId, fullName}) => (\r\n                <Option key={playerId} value={fullName}>\r\n                    <img\r\n                        className=\"player-option-image\"\r\n                        src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                        alt={`${fullName}`}\r\n                    />\r\n                    <span className=\"player-option-label\">{fullName}</span>\r\n                </Option>\r\n            )),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n            <AutoComplete\r\n                className=\"search-bar\"\r\n                size=\"large\"\r\n                dataSource={dataSource}\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n                placeholder=\"Search NBA Player\"\r\n                optionLabelProp=\"value\"\r\n            >\r\n                <Input suffix={<Icon type=\"search\" />} />\r\n            </AutoComplete>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Profile } from './Profile';\r\nimport nba from 'nba';\r\nimport { DataViewContainer } from './DataViewContainer';\r\nimport { SearchBar } from './SearchBar';\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\n\r\nwindow.nba = nba;\r\n\r\nexport class Main extends React.Component {\r\n    state = {\r\n        playerInfo: DEFAULT_PLAYER_INFO\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerInfo(this.state.playerInfo.playerName);\r\n    }\r\n\r\n    loadPlayerInfo = (playerName) => {\r\n        const { playerId } = nba.findPlayer(playerName);\r\n        nba.stats\r\n            .playerInfo({ PlayerID: playerId })\r\n            .then(({ commonPlayerInfo, playerHeadlineStats }) => {\r\n                const playerInfo = {\r\n                    ...commonPlayerInfo[0],\r\n                    ...playerHeadlineStats[0]\r\n                };\r\n\r\n                this.setState({\r\n                    playerInfo\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SearchBar loadPlayerInfo={this.loadPlayerInfo} />\r\n                <div className=\"player\">\r\n                    <Profile playerInfo={this.state.playerInfo} />\r\n                    <DataViewContainer playerId={this.state.playerInfo.playerId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\n\n\nclass App extends Component {\n\n    render() {\n        console.log('render', this.state);\n        return (\n            <div className=\"App\">\n                <TopBar />\n                <Main />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}